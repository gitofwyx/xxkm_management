<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxkm.management.office.devices.dao.DevicesDao">
    <sql id="columns"> id,class_id,devices_ident,device_id,office_unique_name,device_state,inventory_office_id,location_office_id,
 mediaOfLANId,device_origin,present_stock_id,in_storage_id,delivery_id,device_entry_date,device_deployment_status,device_deployment_date,related_flag,
 related_id,device_location,device_flag,devices_auditing_mark,reject_date,remark,keyWord,createUserId,createDate,updateUserId,updateDate,deleteFlag</sql>

    <resultMap id="devicesSelectMap" type="java.util.HashMap">
        <id column="id" property="value" jdbcType="VARCHAR"/>
        <result column="present_stock_id" property="present_stock_id" jdbcType="VARCHAR"/>
        <result column="office_unique_name" property="office_unique_name" jdbcType="VARCHAR"/>
        <result column="devices_ident" property="text" jdbcType="VARCHAR"/>
        <result column="device_entry_date" property="device_entry_date" jdbcType="VARCHAR"/>
        <result column="device_location" property="device_location" jdbcType="VARCHAR"/>
    </resultMap>

    <!--获取分页 -->
    <select id="listDevices" resultType="com.xxkm.management.office.devices.entity.Devices">
        select
        <include refid="columns"></include>
        from xxk_offices_devices where  deleteFlag='0' and device_deployment_status='2'
        <if test="class_id!=null and ''!= class_id">
            and class_id = #{class_id}
        </if>
        <if test="device_id!=null and ''!= device_id">
            and device_id = #{device_id}
        </if>
        <if test="location_office_id!=null and ''!= location_office_id and 'a5c7b9f5-1f3c-4308-86e9-148b21416b37'!=location_office_id">
            and location_office_id = #{location_office_id}
        </if>
        ORDER BY createDate desc limit #{pageStart},#{pageSize};
    </select>

    <!--获取记录数 -->
    <select id="countDevices" parameterType="string" resultType="java.lang.Integer">
        select count(id) from xxk_offices_devices;
    </select>

    <!--根据部署状态获取设备-->
    <select id="getDevicesWithStatus" resultType="com.xxkm.management.office.devices.entity.Devices">
        select
        <include refid="columns"></include>
        from xxk_offices_devices
        where device_id=#{0}
        and location_office_id=#{1}
        and device_deployment_status=#{2}
        and deleteFlag='0';
    </select>

    <select id="getDevicesWithDepositoryId" resultMap="devicesSelectMap">
        select id,present_stock_id,office_unique_name,devices_ident,device_entry_date,device_location
        from xxk_offices_devices
        where present_stock_id=#{0}
          and device_deployment_status=#{1}
          and deleteFlag='0';
    </select>

    <!--添加信息 -->
    <insert id="addDevices" parameterType="com.xxkm.management.office.devices.entity.Devices">
        insert into xxk_offices_devices(<include refid="columns"></include>) values(
        #{id},#{class_id},#{devices_ident},#{device_id},#{office_unique_name},#{device_state},#{inventory_office_id},#{location_office_id},
        #{mediaOfLANId},#{device_origin},#{present_stock_id},#{in_storage_id},#{delivery_id},#{device_entry_date},#{device_deployment_status},#{device_deployment_date},
        #{related_flag},#{related_id},#{device_location},#{device_flag},#{devices_auditing_mark},#{reject_date},#{remark},#{keyWord},#{createUserId},
        #{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--更新操作 -->
    <update id="updateDevicesForDeployment" parameterType="com.xxkm.management.office.devices.entity.Devices">
        update xxk_offices_devices
        set devices_ident=#{devices_ident},device_deployment_status=#{device_deployment_status},device_deployment_date=#{device_deployment_date},
            office_unique_name=#{office_unique_name},device_location=#{device_location},updateUserId=#{updateUserId},updateDate=#{updateDate}
        where id=#{id} and deleteFlag='0';
    </update>

    <!--更新操作 -->
    <update id="updateDevicesStatus">
        update xxk_offices_devices
        set inventory_office_id=#{1},location_office_id=#{1},present_stock_id=#{2},device_deployment_status=#{3},updateUserId=#{4},updateDate=#{5}
        where id=#{0} and deleteFlag='0';
    </update>

    <!--转科操作 -->
    <update id="transferDevices" parameterType="com.xxkm.management.office.devices.entity.Devices">
        update xxk_offices_devices
        set device_deployment_status=#{device_deployment_status},office_unique_name=#{office_unique_name}, location_office_id=#{location_office_id},
            present_stock_id=#{present_stock_id},device_location=#{device_location},updateUserId=#{updateUserId},updateDate=#{updateDate}
        where id=#{id} and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteListDevices" parameterType="java.util.List">
        UPDATE xxk_reg_user SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>