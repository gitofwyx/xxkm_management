<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxkm.management.office.storage.dao.OfficesStorageDao">
    <sql id="columns">id,class_id,entity_id,entity_name,entity_type,stock_or_depository_id,offices_entity_id,offices_storage_ident,offices_storage_type,
offices_storage_genre,offices_storage_by,original_storage_officeId,offices_storage_officeId,offices_storage_date,offices_storage_no,offices_storage_no_2,
offices_storage_unit,offices_storage_proportion,offices_storage_total,offices_storage_total_unit,entity_entry_status,keyWord,createUserId,createDate,updateUserId,
updateDate,deleteFlag</sql>

    <sql id="storageForEntry">id,class_id,entity_id,entity_name,entity_type,stock_or_depository_id,offices_entity_id,offices_storage_ident,offices_storage_type,offices_storage_by,
offices_storage_officeId,offices_storage_date,offices_storage_no,offices_storage_no_2,offices_storage_unit,offices_storage_proportion,offices_storage_total,entity_entry_status</sql>

    <sql id="deliveryForEntry">id,class_id,entity_id,entity_name,entity_type,stock_id,stock_entity_id,out_confirmed_ident,out_confirmed_type,out_confirmed_by,out_confirmed_officeId,
     out_confirmed_date,out_confirmed_no,out_confirmed_no_2,out_confirmed_unit,out_confirmed_proportion,out_confirmed_total,entity_entry_status</sql>

    <resultMap id="entityEntryMap" type="java.util.HashMap">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="dev_name" property="dev_name" jdbcType="VARCHAR"/>
        <result column="dev_type" property="text" jdbcType="VARCHAR"/>
        <result column="single_unit" property="single_unit" jdbcType="VARCHAR"/>
    </resultMap>

    <!--获取分页 -->
    <select id="listOfficesStorage" resultType="com.xxkm.management.storage.entity.Delivery">
        select
        <include refid="columns"></include>
        from xxk_offices_storage where deleteFlag='0' ORDER BY createDate desc limit #{0},#{1};
    </select>

    <!--获取分页 -->
    <select id="listOfficesStorageByStock" parameterType="string" resultType="com.xxkm.management.office.storage.entity.OfficesStorage">
        select
        <include refid="columns"></include>
        from xxk_offices_storage where deleteFlag='0' and stock_id=#{2} ORDER BY createDate desc limit #{0},#{1};
    </select>

    <!--获取分页 -->
    <select id="listOfficesStorageByOffice" parameterType="string" resultType="com.xxkm.management.office.storage.entity.OfficesStorage">
        select
        <include refid="columns"></include>
        from xxk_offices_storage where deleteFlag='0' and out_confirmed_officeId=#{2} and entity_entry_status='1' ORDER BY createDate desc limit #{0},#{1};
    </select>

    <!--获取分页 -->
    <select id="listStorageUNIONDeliveryByOffice" parameterType="string" resultType="com.xxkm.management.office.storage.entity.OfficesStorage">
        SELECT Storage_UNION.*
        FROM (
            select
            <include refid="storageForEntry"></include>
            from xxk_offices_storage
            where deleteFlag='0' and offices_storage_officeId=#{2} and entity_entry_status='1'
            UNION ALL
            select
            <include refid="deliveryForEntry"></include>
            from xxk_delivery
            where deleteFlag='0' and out_confirmed_officeId=#{2} and entity_entry_status in ('0','1','2')
            ) AS Storage_UNION;
    </select>

    <!--添加信息 -->
    <insert id="addOfficesStorage" parameterType="com.xxkm.management.office.storage.entity.OfficesStorage">
        insert into xxk_offices_storage(<include refid="columns"></include>) values(
        #{id},#{class_id},#{entity_id},#{entity_name},#{entity_type},#{stock_or_depository_id},#{offices_entity_id},#{offices_storage_ident},#{offices_storage_type},
        #{offices_storage_genre},#{offices_storage_by},#{original_storage_officeId},#{offices_storage_officeId},#{offices_storage_date},#{offices_storage_no},
        #{offices_storage_no_2},#{offices_storage_unit},#{offices_storage_proportion},#{offices_storage_total},#{offices_storage_total_unit},#{entity_entry_status},
        #{keyWord},#{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--根据id获取信息 -->
    <select id="getRegUser" parameterType="string" resultType="com.xxkm.management.user.entity.RegUser">
        select
        <include refid="columns"></include>
        from xxk_reg_user
        where id=#{id}
        and deleteFlag='0';
    </select>

    <!--修改信息 -->
    <update id="updateRegUser" parameterType="com.xxkm.management.user.entity.RegUser">
        update xxk_reg_user set account=#{account},birth=#{birth},sex=#{sex},phone=#{phone},createUnit=#{createUnit},
        QCellCore=#{QCellCore},updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{id} and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteListRegUser" parameterType="java.util.List">
        UPDATE xxk_reg_user SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>