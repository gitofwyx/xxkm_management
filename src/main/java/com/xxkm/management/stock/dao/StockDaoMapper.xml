<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxkm.management.stock.dao.StockDao">
    <sql id="columns">id,stock_ident,class_id,entity_id,stock_type,stock_office_id,stock_no,stock_unit,stock_proportion,stock_total,
        stock_configured_total,stock_total_unit,stock_flag,remark,keyWord,stock_version,createUserId,createDate,updateUserId,updateDate,deleteFlag</sql>

    <!--获取分页 -->
    <select id="listStock" resultType="com.xxkm.management.stock.entity.Stock">
        select
        <include refid="columns"></include>
        from xxk_stock where  deleteFlag='0' and stock_type=#{search_type}
        <if test="class_id!=null and ''!= class_id">
            and class_id = #{class_id}
        </if>
        <if test="entity_id!=null and ''!= entity_id">
            and entity_id = #{entity_id}
        </if>
        <if test="stock_office_id!=null and ''!= stock_office_id">
            and stock_office_id = #{stock_office_id}
        </if>
        ORDER BY createDate desc limit #{pageStart},#{pageSize};
    </select>

    <!--获取记录数 -->
    <select id="countStock" parameterType="string" resultType="java.lang.Integer">
        select count(id) from xxk_stock where stock_type=#{0};
    </select>

    <!--根据id获取信息 -->
    <select id="listStockByEntityId" parameterType="string" resultType="com.xxkm.management.stock.entity.Stock">
        select
        <include refid="columns"></include>
        from xxk_stock
        where entity_id=#{0}
        and stock_office_id=#{1}
        and deleteFlag='0';
    </select>

    <!--根据EntityId获取信息 -->
    <select id="getStocksByEntityId" parameterType="string" resultType="com.xxkm.management.stock.entity.Stock">
        select
        <include refid="columns"></include>
        from xxk_stock
        where entity_id=#{0}
        and deleteFlag='0';
    </select>

    <!--添加信息 --><!--设置版本号为1-->
    <insert id="addStock" parameterType="com.xxkm.management.stock.entity.Stock">
        insert into xxk_stock(<include refid="columns"></include>) values(
        #{id},#{stock_ident},#{class_id},#{entity_id},#{stock_type},#{stock_office_id},#{stock_no},#{stock_unit},#{stock_proportion},#{stock_total},
        0,#{stock_total_unit},#{stock_flag},#{remark},#{keyWord},1,#{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--根据OfficesStorage添加信息 --><!--设置版本号为1-->
    <insert id="addStockForOfficesStorage" parameterType="com.xxkm.management.office.storage.entity.OfficesStorage">
        insert into xxk_stock(<include refid="columns"></include>) values(
        #{id},#{offices_storage_ident},#{class_id},#{entity_id},#{offices_storage_type},#{offices_storage_officeId},#{offices_storage_no},#{offices_storage_unit},
        #{offices_storage_proportion},#{offices_storage_total},0,#{offices_storage_unit},#{entity_entry_status},#{keyWord},1,#{createUserId},#{createDate},
        #{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--根据id获取信息 -->
    <select id="getStockIdByIdent" parameterType="string" resultType="string">
        select id
        from xxk_stock
        where in_confirmed_ident=#{0}
        and deleteFlag='0';
    </select>

    <!--根据id获取信息 -->
    <select id="getStockById" parameterType="string" resultType="com.xxkm.management.stock.entity.Stock">
        select
        <include refid="columns"></include>
        from xxk_stock
        where id=#{0}
        and deleteFlag='0';
    </select>

    <!--更新记录 -->
    <update id="updateStock" parameterType="com.xxkm.management.stock.entity.Stock">
        update xxk_stock set account=#{account},birth=#{birth},sex=#{sex},phone=#{phone},createUnit=#{createUnit},
        QCellCore=#{QCellCore},updateUserId=#{updateUserId},updateDate=#{updateDate}
        where entity_id=#{entity_id} and deleteFlag='0';
    </update>

    <!--入库更新 -->
    <update id="plusStockNo" parameterType="com.xxkm.management.stock.entity.Stock">
        update xxk_stock set stock_no=#{stock_no},stock_total=stock_total+#{stock_total},stock_version=stock_version+1,
        updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{id} and stock_version=#{stock_version} and deleteFlag='0';
    </update>

    <!--入库更新 反出库 -->
    <update id="plusStockNoForDelivery" parameterType="com.xxkm.management.storage.entity.Delivery">
        update xxk_stock set stock_no=#{out_confirmed_no_2},stock_total=stock_total+#{out_confirmed_total},stock_version=stock_version+1,
                             updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{stock_id} and deleteFlag='0';
    </update>

    <!--根据OfficesStorage入库更新 -->
    <update id="updateStockForOfficesStorage" parameterType="com.xxkm.management.office.storage.entity.OfficesStorage">
        update xxk_stock set stock_no=#{offices_storage_no},stock_total=stock_total+#{offices_storage_total},stock_version=stock_version+1,
                             updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{id} and deleteFlag='0';
    </update>

    <!--配置库存增加1 -->
    <update id="plusStockConfiguredTotal">
        update xxk_stock set stock_configured_total=stock_configured_total+1,stock_version=stock_version+1,
                             updateUserId=#{1},updateDate=#{2}
        where id=#{0} and stock_total&gt;stock_configured_total and stock_version=#{3} and deleteFlag='0';
    </update>

    <!--出库更新 -->
    <update id="reduceStockNo" parameterType="com.xxkm.management.stock.entity.Stock">
        update xxk_stock set stock_no=#{stock_no},stock_total=stock_total-#{stock_total},stock_version=stock_version+1,updateUserId=#{updateUserId},
        updateDate=#{updateDate} where id=#{id} and stock_total>=#{stock_total} and stock_version=#{stock_version} and deleteFlag='0';
    </update>

    <!--出库更新（单个设备、耗材） -->
    <update id="reduceSingleStockNo">
        update xxk_stock set stock_no=#{1},stock_total=stock_total-1,stock_configured_total=stock_configured_total-1,stock_version=stock_version+1,
        updateUserId=#{2},updateDate=#{3}
        where id=#{0} and stock_total&gt;0 and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteListRegUser" parameterType="java.util.List">
        UPDATE xxk_reg_user SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>