<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxkm.management.user.dao.RegUserDao">
    <sql id="columns">id,roleId,account,password,name,birth,sex,phone,education,marriage,createUnit,QCellCore,
        address,keyWord,createUserId,createDate,updateUserId,updateDate,deleteFlag</sql>

    <resultMap id="BaseResultMap" type="java.util.HashMap">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--根据id获取用户信息 -->
    <select id="getUserById" parameterType="string" resultType="com.xxkm.management.user.entity.RegUser">
        select
        <include refid="columns"></include>
        from xxk_reg_user
        where id=#{id}
        and deleteFlag='0';
    </select>

    <select id="listRegUserByIds" parameterType="java.util.List" resultMap="BaseResultMap">
        SELECT id,name
        from xxk_reg_user
        WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and deleteFlag='0';
    </select>

    <!--根据账号密码检验登录 -->
    <select id="login" parameterType="string" resultType="string">
        select account
        from xxk_reg_user
        where account=#{0} and password=#{1} and deleteFlag='0';
    </select>

    <!--检验用户名是否存在（根据用户名获取用户名） -->
    <select id="getUserAccount" parameterType="string" resultType="string">
        select account
        from xxk_reg_user
        where account=#{account} and deleteFlag='0';
    </select>

    <!--获取分页 -->
    <select id="listRegUser" parameterType="string" resultType="com.xxkm.management.user.entity.RegUser">
        select
        <include refid="columns"></include>
        from xxk_reg_user where deleteFlag='0' ORDER BY createDate  desc limit #{0},#{1};
    </select>

    <!--获取记录数 -->
    <select id="countRegUser" resultType="java.lang.Integer">
        select count(id) from xxk_reg_user;
    </select>

    <!--添加用户信息 -->
    <insert id="addRegUser" parameterType="com.xxkm.management.user.entity.RegUser">
        insert into xxk_reg_user(<include refid="columns"></include>) values(
        #{id},#{roleId},#{account},#{password},#{name},#{birth},#{sex},#{phone},#{education},#{marriage},#{createUnit},
        #{QCellCore},#{address},#{keyWord},#{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--根据id获取信息 -->
    <select id="getRegUser" parameterType="string" resultType="com.xxkm.management.user.entity.RegUser">
        select
        <include refid="columns"></include>
        from xxk_reg_user
        where id=#{id}
        and deleteFlag='0';
    </select>

    <!--根据id获取信息 -->
    <select id="getUserByAccount" parameterType="string" resultType="com.xxkm.management.user.entity.RegUser">
        select
        <include refid="columns"></include>
        from xxk_reg_user
        where account=#{0}
        and deleteFlag='0';
    </select>

    <!--根据账号获取角色信息 -->
    <select id="getRoleByAccount" parameterType="string" resultType="string">
        select t2.roleVal
        from xxk_reg_user t1 INNER JOIN xxk_roles t2 on t1.roleId = t2.id
        where t1.deleteFlag='0' and t2.deleteFlag='0' and account=#{account};
    </select>

    <!--修改信息 -->
    <update id="updateRegUser" parameterType="com.xxkm.management.user.entity.RegUser">
        update xxk_reg_user set account=#{account},birth=#{birth},sex=#{sex},phone=#{phone},createUnit=#{createUnit},
        QCellCore=#{QCellCore},updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{id} and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteListRegUser" parameterType="java.util.List" >
        UPDATE xxk_reg_user SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and deleteFlag='0';
    </update>

</mapper>