<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxkm.management.storage.dao.StorageDao">
    <sql id="columns">id,class_id,entity_id,stock_id,stock_entity_id,in_confirmed_ident,in_confirmed_type,in_confirmed_by,recovery_officeId,
       in_confirmed_officeId,in_confirmed_date,in_confirmed_no,in_confirmed_total,in_confirmed_origin,fact_dev_no,out_flag,keyWord,
       createUserId,createDate,updateUserId,updateDate,deleteFlag</sql>

    <!--获取分页 -->
    <select id="listStorage" parameterType="string" resultType="com.xxkm.management.storage.entity.Storage">
        select
        <include refid="columns"></include>
        from xxk_in_storage where deleteFlag='0' ORDER BY createDate desc limit #{0},#{1};
    </select>

    <!--获取记录数 -->
    <select id="countStorage" resultType="java.lang.Integer">
       select count(id) from xxk_in_storage;
    </select>

    <!--获取分页 -->
    <select id="listStorageByStock" resultType="com.xxkm.management.storage.entity.Storage">
        select
        <include refid="columns"></include>
        from xxk_in_storage where  deleteFlag='0'
        <if test="class_id!=null and ''!= class_id">
            and class_id = #{class_id}
        </if>
        <if test="entity_id!=null and ''!= entity_id">
            and entity_id = #{entity_id}
        </if>
        <if test="stock_id!=null and ''!= stock_id">
            and stock_id = #{stock_id}
        </if>
        <if test="officeId!=null and ''!= officeId and 'a5c7b9f5-1f3c-4308-86e9-148b21416b37'!=officeId">
            and in_confirmed_officeId = #{officeId}
        </if>
        ORDER BY createDate desc limit #{pageStart},#{pageSize};
    </select>

    <!--添加信息 -->
    <insert id="addStorage" parameterType="com.xxkm.management.storage.entity.Storage">
        insert into xxk_in_storage(<include refid="columns"></include>) values(
        #{id},#{class_id},#{entity_id},#{stock_id},#{stock_entity_id},#{in_confirmed_ident},#{in_confirmed_type},#{in_confirmed_by},#{recovery_officeId},
        #{in_confirmed_officeId},#{in_confirmed_date},#{in_confirmed_no},#{in_confirmed_total},#{in_confirmed_origin},#{fact_dev_no},
        #{out_flag},#{keyWord}, #{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--添加信息 -->
    <insert id="addStorageForOfficesStorage" parameterType="com.xxkm.management.office.storage.entity.OfficesStorage">
        insert into xxk_in_storage(<include refid="columns"></include>) values(
        #{id},#{class_id},#{entity_id},#{stock_or_depository_id},#{offices_entity_id},#{offices_storage_ident},#{offices_storage_type},#{offices_storage_by},
        #{original_storage_officeId},#{offices_storage_officeId},#{offices_storage_date},#{offices_storage_no},#{offices_storage_total},1,
        #{entity_entry_status},#{keyWord}, #{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--根据id获取信息 -->
    <select id="getStorageIdByIdent" parameterType="string" resultType="string">
        select id
        from xxk_in_storage
        where in_confirmed_ident=#{0}
        and deleteFlag='0';
    </select>

    <!--修改信息 -->
    <update id="updateRegUser" parameterType="com.xxkm.management.user.entity.RegUser">
        update xxk_reg_user set account=#{account},birth=#{birth},sex=#{sex},phone=#{phone},createUnit=#{createUnit},
        QCellCore=#{QCellCore},updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{id} and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteListRegUser" parameterType="java.util.List">
        UPDATE xxk_reg_user SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>