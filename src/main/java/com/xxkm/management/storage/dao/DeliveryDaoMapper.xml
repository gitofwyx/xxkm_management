<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxkm.management.storage.dao.DeliveryDao">
    <sql id="columns">id,class_id,entity_id,entity_name,entity_type,stock_id,stock_entity_id,out_confirmed_ident,out_confirmed_type,out_confirmed_genre,out_confirmed_by,
out_confirmed_officeId,out_confirmed_date,out_confirmed_no,out_confirmed_no_2,out_confirmed_unit,out_confirmed_proportion,out_confirmed_total,out_confirmed_total_unit,
entity_entry_status,keyWord,createUserId,createDate,updateUserId,updateDate,deleteFlag</sql>

    <sql id="deliveryForEntry">id,class_id,entity_id,entity_name,entity_type,stock_id,stock_entity_id,out_confirmed_ident,out_confirmed_type,out_confirmed_genre,
out_confirmed_by,out_confirmed_officeId,out_confirmed_date,out_confirmed_no,out_confirmed_no_2,out_confirmed_unit,out_confirmed_proportion,out_confirmed_total,
out_confirmed_total_unit,entity_entry_status,updateDate</sql>

    <sql id="storageForEntry">id,class_id,entity_id,entity_name,entity_type,
stock_or_depository_id as stock_id,
offices_entity_id as stock_entity_id,
offices_storage_ident as out_confirmed_ident,
offices_storage_type as out_confirmed_type,
offices_storage_genre as out_confirmed_genre,
offices_storage_by as out_confirmed_by,
offices_storage_officeId as out_confirmed_officeId,
offices_storage_date as out_confirmed_date,
offices_storage_no as out_confirmed_no,
offices_storage_no_2 as out_confirmed_no_2,
offices_storage_unit as out_confirmed_unit,
offices_storage_proportion as out_confirmed_proportion,
offices_storage_total as out_confirmed_total,
offices_storage_total_unit as out_confirmed_total_unit,
entity_entry_status,
updateDate</sql>

    <!--获取分页 -->
    <select id="listDelivery" parameterType="string" resultType="com.xxkm.management.storage.entity.Delivery">
        select
        <include refid="columns"></include>
        from xxk_delivery where deleteFlag='0' ORDER BY createDate desc limit #{0},#{1};
    </select>

    <!--获取记录数 -->
    <select id="countDelivery" resultType="java.lang.Integer">
        select count(id) from xxk_delivery;
    </select>

    <!--获取分页 -->
    <select id="listDeliveryByStock" parameterType="string" resultType="com.xxkm.management.storage.entity.Delivery">
        select
        <include refid="columns"></include>
        from xxk_delivery where  deleteFlag='0'
        <if test="class_id!=null and ''!= class_id">
            and class_id = #{class_id}
        </if>
        <if test="entity_id!=null and ''!= entity_id">
            and entity_id = #{entity_id}
        </if>
        <if test="stock_id!=null and ''!= stock_id">
            and stock_id = #{stock_id}
        </if>
        <if test="officeId!=null and ''!= officeId and 'a5c7b9f5-1f3c-4308-86e9-148b21416b37'!=officeId">
            and out_confirmed_officeId = #{officeId}
        </if>
        ORDER BY createDate desc limit #{pageStart},#{pageSize};
    </select>

    <!--获取分页 -->
    <select id="listDeliveryByOffice" resultType="com.xxkm.management.storage.entity.Delivery">
        select
        <include refid="columns"></include>
        from xxk_delivery
        where deleteFlag='0' and out_confirmed_officeId=#{2} and entity_entry_status in ('0','1','2')
        ORDER BY createDate desc limit #{0},#{1};
    </select>

    <select id="listDeliveryUNIONStorageByOffice" parameterType="string" resultType="com.xxkm.management.storage.entity.Delivery">
        SELECT Storage_UNION.*
        FROM (
        select
        <include refid="deliveryForEntry"></include>
        from xxk_delivery
        where deleteFlag='0' and out_confirmed_officeId=#{2} and entity_entry_status in ('0','1','2')
        UNION ALL
        select
        <include refid="storageForEntry"></include>
        from xxk_offices_storage
        where deleteFlag='0' and offices_storage_officeId=#{2} and entity_entry_status='1'
        ) AS Storage_UNION ORDER BY Storage_UNION.updateDate desc limit #{0},#{1};
    </select>

    <!--添加信息 -->
    <insert id="addDelivery" parameterType="com.xxkm.management.storage.entity.Delivery">
        insert into xxk_delivery(<include refid="columns"></include>) values(
        #{id},#{class_id},#{entity_id},#{entity_name},#{entity_type},#{stock_id},#{stock_entity_id},#{out_confirmed_ident},#{out_confirmed_type},#{out_confirmed_genre},
        #{out_confirmed_by},#{out_confirmed_officeId},#{out_confirmed_date}, #{out_confirmed_no},#{out_confirmed_no_2},#{out_confirmed_unit},#{out_confirmed_proportion},
        #{out_confirmed_total},#{out_confirmed_total_unit},#{entity_entry_status},#{keyWord},#{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <!--修改信息 -->
    <update id="updateDeliveryStatus"  parameterType="string">
        update xxk_delivery set entity_entry_status='3'
         where entity_entry_status in ('0','1','2')
         and id=#{0}
         and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteListRegUser" parameterType="java.util.List">
        UPDATE xxk_reg_user SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>